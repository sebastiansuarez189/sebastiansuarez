---
title: "Code for Research"
---

## Tweets, Networks, Text

Let us now compare the language use by House Democrats and Republicans

We will again load the Twitter data and create our network of MCs that retweet each other:

```{r}

## Library to produce network graphs
library(igraph) 
library(haven)
library(foreign)
library(lubridate)
library(dplyr)
library(ggplot2)

#set your working directory
setwd("C:/Users/suava/Desktop/R")
#rm(list=ls(all=TRUE))

#load Data
load("C:/Users/suava/Desktop/R/ColombiaTimelines-07312022 (1).RData") 


select.names<-names(table(boca.df[,3]))
congress <- data.frame(boca.df[boca.df[,9] %in% select.names, ])
View(congress)

```

Create the network object and add some important variables. We will use E(net)\$text, so this is key.

```{r}

# Create Network

data<-cbind(c(congress[,3]),c(congress[,9]))
net <- graph.empty()
net <- add.vertices(net, length(unique(c(data))),name=as.character(unique(c(data))))
net <- add.edges(net, t(data))
E(net)$text <- congress$text
E(net)$name.auth <- congress$rtscreenname
E(net)$name.hub <- congress$screenname
V(net)$eig<-evcent(net)$vector
V(net)$ind<- degree(net,mode="in")
V(net)$outd<- degree(net,mode="out")
E(net)$color <- "gray"
E(net)$friends <- congress$friends

```

Let us now run again our community detection "walktrap.community". We will then retain the top communities and add V(net)\$membership to our network.

```{r}

### Community detection, retain the top communities

my.com.fast <- walktrap.community(net)
V(net)$membership <- my.com.fast$membership
sel.com<-names(tail(sort(table(V(net)$membership)),n=6)) 
collect.nodes<- which(V(net)$membership==sel.com[1])
for(i in 2:6){collect.nodes<- c(collect.nodes,which(V(net)$membership==sel.com[i]))}
net <- induced.subgraph(graph=net,vids=collect.nodes)



```

Estimate the FR layout and add it to the network. Visualize your network (using plot instead of plot.igraph if the network has thousands of edges).

```{r}
## Estimate FR Layout

l <-layout_with_fr(net, grid = c("nogrid")) 
V(net)$l1<-l[,1]
V(net)$l2<-l[,2]

#Plot 
tiff(filename = paste("Basic Network Plot.tiff",sep=""), width = 8, height = 8, units = "in", pointsize = 8, compression = c("lzw"),  bg = "white", res = 300)
plot(V(net)$l1,V(net)$l2, col=V(net)$membership, cex=log(V(net)$ind)/5, pch=16, xlab="", ylab="", yaxt='n', xaxt='n')
dev.off()


```

![](Basic%20Network%20Plot.png)

### Let's see who are the leading authorities of each community

```{r}


# Make a table of the number of tweets Most active Authorities com 1
for(i in 1:4){
d <- degree(induced.subgraph(graph=net, vids=which(V(net)$membership==i)), mode="in")
d <- as.data.frame(sort(d,decreasing = FALSE))
colnames(d) <- c("Tweets")
print(tail(d))
#windows()
png(paste("Communities on the Colombian Congress",i,".png",sep=""), w=700, h=1000)
par(mar=c(5,10,2,2))
with(tail(d,n=30), barplot(Tweets, names=tail(rownames(d),n=30), horiz=T, las=1, main=paste("Colombian Congress - Net ", i, sep=""), col=i))
dev.off()
}

table(E(net)$membership.auth,E(net)$membership.hub)

tail(sort(table(V(net)$membership)),30)

```

![](Communities%20on%20the%20Colombian%20Congress1.png)

![](Communities%20on%20the%20Colombian%20Congress2.png)

![](Communities%20on%20the%20Colombian%20Congress3.png)

![](Communities%20on%20the%20Colombian%20Congress4.png)

We will add the community membership to the E(net). This is key to compare the texts of the Democrats and Republicans.

```{r}

###Merge Membership to Auth
matrix2<- as.data.frame(cbind(V(net)$name,V(net)$membership))
vector2<- as.data.frame(E(net)$name.auth)
colnames(matrix2)<- c("name.auth","membership.auth")
colnames(vector2)<- c("name.auth")
E(net)$membership.auth<-left_join(x=vector2, y=matrix2, by="name.auth")$membership.auth

###Merge Membership to Hub
vector2<- as.data.frame(E(net)$name.hub)
colnames(matrix2)<- c("name.hub","membership.hub")
colnames(vector2)<- c("name.hub")
E(net)$membership.hub<-left_join(x=vector2, y=matrix2, by="name.hub")$membership.hub

summary(net)

tail(sort(table(E(net)$membership.auth)),30)
```

```{r}

library(ggplot2)
library(gtable)

cent<-data.frame(bet=betweenness(net),eig=evcent(net)$vector)
# evcent returns lots of data associated with the EC, but we only need the
# leading eigenvector
res<-lm(eig~bet,data=cent)$residuals
cent<-transform(cent,res=res)

Hub<-hub.score(net)$vector
Authority<-authority.score(net)$vector

# We use ggplot2 to make things a
# bit prettier
p<-ggplot(cent,aes(x=log(Hub),y=log(Authority), label=V(net)$name,colour=Hub, size=Authority))+xlab("Hub-Who You Follow")+ylab("Authority-Who Follows You")

# We use the residuals to color and
# shape the points of our plot,
# making it easier to spot outliers.

tiff(filename = "Authority and Hub.tiff", width = 18, height = 9, units = "in", pointsize = 12, compression = c("lzw"), bg = "white", res = 300)
p+geom_text()+ggtitle("Authority vs. Hub")
dev.off()
```

![](Authority%20and%20Hub.png)
